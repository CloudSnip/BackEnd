name: Deploy Project with Nginx

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    name: Deploy project with Nginx
    permissions:
      deployments: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: 'actions/checkout@v2'
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}  # Set environment dynamically

      - name: Set up SSH Key and Deploy my App on Server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            git config --global url."https://${{ secrets.PERSONAL_GITHUB_TOKEN }}:@github.com".insteadOf "https://github.com"
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              echo "Deploying to production..."
              cd ${{ secrets.PROD_DIR }}  # Use PROD_DIR secret for production directory
              git pull origin main  # Pull from main for production
              npm ci
              npm run frontend
              pm2 restart chatg --update-env
            elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
              echo "Deploying to development..."
              cd ${{ secrets.DEV_DIR }}  # Use DEV_DIR secret for development directory
              git pull origin develop  # Pull from develop for development
              npm ci
              npm run frontend
              pm2 restart chatg --update-env
            fi

      - name: Update deployment Status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
